// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mailer.proto

package mailerWorker

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageRequest struct {
	SendTo               []string `protobuf:"bytes,1,rep,name=SendTo,proto3" json:"SendTo,omitempty"`
	Subject              string   `protobuf:"bytes,2,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Body                 string   `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageRequest) Reset()         { *m = MessageRequest{} }
func (m *MessageRequest) String() string { return proto.CompactTextString(m) }
func (*MessageRequest) ProtoMessage()    {}
func (*MessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eced95006893a4c, []int{0}
}

func (m *MessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageRequest.Unmarshal(m, b)
}
func (m *MessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageRequest.Marshal(b, m, deterministic)
}
func (m *MessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageRequest.Merge(m, src)
}
func (m *MessageRequest) XXX_Size() int {
	return xxx_messageInfo_MessageRequest.Size(m)
}
func (m *MessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessageRequest proto.InternalMessageInfo

func (m *MessageRequest) GetSendTo() []string {
	if m != nil {
		return m.SendTo
	}
	return nil
}

func (m *MessageRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *MessageRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type DocumentMessageRequest struct {
	SendTo               []string    `protobuf:"bytes,1,rep,name=SendTo,proto3" json:"SendTo,omitempty"`
	Subject              string      `protobuf:"bytes,2,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Body                 string      `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	Documents            []*Document `protobuf:"bytes,4,rep,name=Documents,proto3" json:"Documents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DocumentMessageRequest) Reset()         { *m = DocumentMessageRequest{} }
func (m *DocumentMessageRequest) String() string { return proto.CompactTextString(m) }
func (*DocumentMessageRequest) ProtoMessage()    {}
func (*DocumentMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eced95006893a4c, []int{1}
}

func (m *DocumentMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentMessageRequest.Unmarshal(m, b)
}
func (m *DocumentMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentMessageRequest.Marshal(b, m, deterministic)
}
func (m *DocumentMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentMessageRequest.Merge(m, src)
}
func (m *DocumentMessageRequest) XXX_Size() int {
	return xxx_messageInfo_DocumentMessageRequest.Size(m)
}
func (m *DocumentMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentMessageRequest proto.InternalMessageInfo

func (m *DocumentMessageRequest) GetSendTo() []string {
	if m != nil {
		return m.SendTo
	}
	return nil
}

func (m *DocumentMessageRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *DocumentMessageRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *DocumentMessageRequest) GetDocuments() []*Document {
	if m != nil {
		return m.Documents
	}
	return nil
}

type MessageReply struct {
	Sent                 string   `protobuf:"bytes,1,opt,name=Sent,proto3" json:"Sent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageReply) Reset()         { *m = MessageReply{} }
func (m *MessageReply) String() string { return proto.CompactTextString(m) }
func (*MessageReply) ProtoMessage()    {}
func (*MessageReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eced95006893a4c, []int{2}
}

func (m *MessageReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageReply.Unmarshal(m, b)
}
func (m *MessageReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageReply.Marshal(b, m, deterministic)
}
func (m *MessageReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageReply.Merge(m, src)
}
func (m *MessageReply) XXX_Size() int {
	return xxx_messageInfo_MessageReply.Size(m)
}
func (m *MessageReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageReply.DiscardUnknown(m)
}

var xxx_messageInfo_MessageReply proto.InternalMessageInfo

func (m *MessageReply) GetSent() string {
	if m != nil {
		return m.Sent
	}
	return ""
}

type Document struct {
	File                 []byte   `protobuf:"bytes,1,opt,name=File,proto3" json:"File,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=Filename,proto3" json:"Filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eced95006893a4c, []int{3}
}

func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (m *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(m, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *Document) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func init() {
	proto.RegisterType((*MessageRequest)(nil), "mailerWorker.MessageRequest")
	proto.RegisterType((*DocumentMessageRequest)(nil), "mailerWorker.DocumentMessageRequest")
	proto.RegisterType((*MessageReply)(nil), "mailerWorker.MessageReply")
	proto.RegisterType((*Document)(nil), "mailerWorker.Document")
}

func init() { proto.RegisterFile("mailer.proto", fileDescriptor_5eced95006893a4c) }

var fileDescriptor_5eced95006893a4c = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0x4d, 0xcc, 0xcc,
	0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x82, 0xf2, 0xc2, 0xf3, 0x8b, 0xb2, 0x53,
	0x8b, 0x94, 0xc2, 0xb8, 0xf8, 0x7c, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x83, 0x52, 0x0b, 0x4b,
	0x53, 0x8b, 0x4b, 0x84, 0xc4, 0xb8, 0xd8, 0x82, 0x53, 0xf3, 0x52, 0x42, 0xf2, 0x25, 0x18, 0x15,
	0x98, 0x35, 0x38, 0x83, 0xa0, 0x3c, 0x21, 0x09, 0x2e, 0xf6, 0xe0, 0xd2, 0xa4, 0xac, 0xd4, 0xe4,
	0x12, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x18, 0x57, 0x48, 0x88, 0x8b, 0xc5, 0x29, 0x3f,
	0xa5, 0x52, 0x82, 0x19, 0x2c, 0x0c, 0x66, 0x2b, 0x4d, 0x61, 0xe4, 0x12, 0x73, 0xc9, 0x4f, 0x2e,
	0xcd, 0x4d, 0xcd, 0x2b, 0xa1, 0x85, 0x05, 0x42, 0x26, 0x5c, 0x9c, 0x30, 0xf3, 0x8b, 0x25, 0x58,
	0x14, 0x98, 0x35, 0xb8, 0x8d, 0xc4, 0xf4, 0x90, 0xbd, 0xa6, 0x07, 0x93, 0x0e, 0x42, 0x28, 0x54,
	0x52, 0xe2, 0xe2, 0x81, 0xbb, 0xa6, 0x20, 0xa7, 0x12, 0x64, 0x72, 0x70, 0x6a, 0x5e, 0x89, 0x04,
	0x23, 0xc4, 0x64, 0x10, 0x5b, 0xc9, 0x8a, 0x8b, 0x03, 0xa6, 0x01, 0x24, 0xef, 0x96, 0x99, 0x93,
	0x0a, 0x96, 0xe7, 0x09, 0x02, 0xb3, 0x85, 0xa4, 0xb8, 0x38, 0x40, 0x74, 0x5e, 0x62, 0x6e, 0x2a,
	0xd4, 0xa1, 0x70, 0xbe, 0xd1, 0x3a, 0x46, 0x2e, 0x36, 0x5f, 0xb0, 0x23, 0x84, 0x3c, 0xb9, 0xb8,
	0x41, 0x1e, 0x83, 0x5a, 0x27, 0x24, 0x83, 0xea, 0x38, 0xd4, 0x30, 0x91, 0x92, 0xc2, 0x21, 0x5b,
	0x90, 0x53, 0xa9, 0xc4, 0x20, 0x14, 0xc9, 0x25, 0x0c, 0x32, 0x0a, 0x2d, 0x3c, 0x85, 0x54, 0xb0,
	0xfb, 0x97, 0x14, 0xa3, 0x9d, 0x44, 0x57, 0x31, 0x09, 0x39, 0xe7, 0x17, 0xa5, 0xea, 0x41, 0x5c,
	0xed, 0x98, 0x92, 0x58, 0x50, 0x92, 0x5a, 0x94, 0xc4, 0x06, 0x4e, 0x2b, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x6c, 0x1e, 0xe4, 0x7a, 0x3b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MailerClient is the client API for Mailer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MailerClient interface {
	SendMessage(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageReply, error)
	SendDocumentMessage(ctx context.Context, in *DocumentMessageRequest, opts ...grpc.CallOption) (*MessageReply, error)
}

type mailerClient struct {
	cc *grpc.ClientConn
}

func NewMailerClient(cc *grpc.ClientConn) MailerClient {
	return &mailerClient{cc}
}

func (c *mailerClient) SendMessage(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := c.cc.Invoke(ctx, "/mailerWorker.Mailer/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailerClient) SendDocumentMessage(ctx context.Context, in *DocumentMessageRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := c.cc.Invoke(ctx, "/mailerWorker.Mailer/SendDocumentMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MailerServer is the server API for Mailer service.
type MailerServer interface {
	SendMessage(context.Context, *MessageRequest) (*MessageReply, error)
	SendDocumentMessage(context.Context, *DocumentMessageRequest) (*MessageReply, error)
}

// UnimplementedMailerServer can be embedded to have forward compatible implementations.
type UnimplementedMailerServer struct {
}

func (*UnimplementedMailerServer) SendMessage(ctx context.Context, req *MessageRequest) (*MessageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (*UnimplementedMailerServer) SendDocumentMessage(ctx context.Context, req *DocumentMessageRequest) (*MessageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendDocumentMessage not implemented")
}

func RegisterMailerServer(s *grpc.Server, srv MailerServer) {
	s.RegisterService(&_Mailer_serviceDesc, srv)
}

func _Mailer_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailerServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailerWorker.Mailer/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailerServer).SendMessage(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mailer_SendDocumentMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocumentMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailerServer).SendDocumentMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailerWorker.Mailer/SendDocumentMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailerServer).SendDocumentMessage(ctx, req.(*DocumentMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mailer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mailerWorker.Mailer",
	HandlerType: (*MailerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _Mailer_SendMessage_Handler,
		},
		{
			MethodName: "SendDocumentMessage",
			Handler:    _Mailer_SendDocumentMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mailer.proto",
}
